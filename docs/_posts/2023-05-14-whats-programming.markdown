---
layout: post
title:  "Whats Programming?"
categories: jekyll update
---

### 什么是编程？
编程，自然就是编写程序。那么随之而来又出现了一个问题，程序又是什么呢？  
我猜，提到程序是什么，你多半脑海里可能会有诸如以下片段的代码（[点此可以查看以下代码的实际效果]）：  
{% highlight java %}
void setup() {
  size(1000, 500); 
  noStroke();
  rectMode(CENTER);
}

void draw() {
  background(51); 
  fill(255, 204);
  rect(mouseX, height/2, mouseY/2+10, mouseY/2+10);
  fill(255, 204);
  int inverseX = width-mouseX;
  int inverseY = height-mouseY;
  rect(inverseX, height/2, (inverseY/2)+10, (inverseY/2)+10);
}
{% endhighlight %}  
狭义来说程序确实是代码，也就是我们编程时写下的一行行文本；广义地、从本质上来说，程序就是软件，它是我们用来指示计算机硬件（CPU等）执行某个任务而制作的产物。  
想象一下在非计算机领域的语境下我们提到“程序”时一般会怎么说？我们会说“要完成这个事情需要经过这么一个**程序**（或者**过程/步骤**），第一步...第二步...”。在计算机领域也是如此，把计算机想象成一个只能执行一些*固定功能*（比如：加减乘除、判断是或否）的机器人，此时你要指挥它完成一项工作，你必须考虑到它能做的这些*固定功能*，然后明确地告诉它用怎么样的**步骤**来执行它会的这些基本操作，从而完成这个复杂工作。  

想象一个非常简单的实例：
你现在有一个非常简陋的计算机（或者机器人），它的几个*固定功能*包括：
- 它会按你给的指令的顺序一步一步向下执行，除非你的指令内容明确让它去执行别的某一步、或者明确让它结束执行
- 它没有记忆力，但是它可以看着一个数字然后把它念出来
- 它有两块黑板，这两个黑板它可以在上面写下数字、修改数字、读出上面的数字；但是你是看不见黑板上的数字的
- 它会加法和减法，并且能暂时记住最近一次算过的加减法计算的结果
- 它会判断数字的大小

在这种情况下，如果你需要指挥它完成
         <math xmlns="http://www.w3.org/1998/Math/MathML" display="inline">
            <semantics>
              <mrow>
                <mn>3</mn>
                <mo>×</mo>
                <mn>2</mn>
              </mrow>
            </semantics>
         </math>
的计算，你要怎么指挥它？以下是一串可以做到这个任务的命令，虽然很呆板，但是方便我们之后继续解释程序的概念：  
```
1. 在 **黑板A** 上写下 **0**
2. 在 **黑板B** 上写下 **2**
3. 判断 **黑板B** 上的数字，如果等于 **0** 就执行第9步命令；否则执行第4步命令
4. 计算 **黑板A** 上的数字加上 **3** 后的结果
5. 把 **黑板A** 上的数字修改成最近一次（其实就是上一步加法）计算的结果
6. 计算 **黑板B** 上的数字减去 **1** 后的结果
7. 把 **黑板B** 上的数字修改成最近一次（其实就是上一步减法）计算的结果
8. 回到第3步执行
9. 读出 **黑板A** 上的数字
10. 结束执行
```
现在你可以把自己当作计算机，用我准备的这两块“黑板”执行上面这一串命令：  
<label for="fname">黑板A:</label>
<input type="text" id="fname" name="fname">
<label for="lname">黑板B:</label>
<input type="text" id="lname" name="lname"><br>

其实我们完全可以把上述的一串命令就称为程序，现在我们在回过头来观察一下这段程序的特点，从它的本质来定义它。

[点此可以查看以下代码的实际效果]:{{ "/reference/Example-Mouse2D.html" | relative_url }}